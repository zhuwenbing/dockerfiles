name: PHP 8.4 FPM Docker Image CI

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  BASE_IMAGE: php
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: php
  VERSION: "8.4"
  MODE_NAME: fpm
  BASE_SYSTEM: alpine
  BASE_TAG_NAME: 8.4-fpm-alpine

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}

    steps:
      - name: Check if update available
        id: run
        uses: lucacome/docker-image-update-checker@v2.0.0
        with:
          base-image: library/${{ env.BASE_IMAGE }}:${{ env.BASE_TAG_NAME }}
          image: ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.BASE_TAG_NAME }}
        continue-on-error: true
        if: github.event_name == 'schedule'

      - name: Check on result
        id: check
        run: |
          if [[ ${{ steps.run.outcome }} == 'success' ]]; then
            echo "needs-updating=${{ steps.run.outputs.needs-updating }}" >> $GITHUB_OUTPUT
          else
            echo "needs-updating=true" >> $GITHUB_OUTPUT
          fi
        if: github.event_name == 'schedule'

  build:
    needs: check
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'schedule' ||
      needs.check.outputs.needs-updating == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        id: prepare
        run: |
          TAGS="${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.MODE_NAME }},${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.BASE_TAG_NAME }},${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.MODE_NAME }}-${{ env.BASE_SYSTEM }},${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.MODE_NAME }}"
          echo "build_args=BASE_TAG_NAME=${{ env.BASE_TAG_NAME }}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push (PHP 8.4 FPM) Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.IMAGE_NAME }}
          file: ./${{ env.IMAGE_NAME }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json
