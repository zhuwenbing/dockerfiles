name: Docker Nginx Image CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        required: true
        default: "1.23"
        type: choice
        options:
          - "1.23"
    schedule:
      - cron: "0 2 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}
    steps:
      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:${{ github.event.inputs.version }}-alpine
          image: ${{ secrets.DOCKER_USERNAME }}/nginx:${{ github.event.inputs.version }}
          platforms: linux/amd64

  build:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.needs-updating == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          REPOSITORY=${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME=nginx
          VERSION=${{ github.event.inputs.version }}
          TAGS="${REPOSITORY}/${IMAGE_NAME}:${VERSION},${REPOSITORY}/${IMAGE_NAME}:latest"
          echo "build_args=NGINX_BUILD_VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ steps.prepare.outputs.image_name }}
          file: ./${{ steps.prepare.outputs.image_name }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json
