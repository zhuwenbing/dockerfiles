name: IYUUPlus Docker Image CI

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * *"

env:
  PHP_VERSION: "8.3"
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: iyuuplus
  VERSION: latest

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest version from iyuuplus-dev repo
        id: get_version
        run: |
          # 使用 curl 或者 wget 获取 iyuuplus-dev 仓库的 .version 文件内容
          version=$(curl -sS https://raw.githubusercontent.com/ledccn/iyuuplus-dev/master/.version)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare_versions
        run: |
          current_version=$(cat ./${{ env.IMAGE_NAME }}/.version)
          if [ "$current_version" != "${{ steps.get_version.outputs.version }}" ]; then
            echo "Versions differ, triggering Docker build..."
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Versions are the same, no action needed."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up output for subsequent jobs
        id: set_up_job_outputs
        run: |
          echo "Version changed: ${{ steps.compare_versions.outputs.version_changed }}"

    # 设置输出，供其他 job 使用
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      version_changed: ${{ steps.compare_versions.outputs.version_changed }}

  build:
    needs: check
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'schedule' ||
      needs.check.outputs.version_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        id: prepare
        run: |
          TAGS="${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          echo "build_args=PHP_VERSION=${{ env.PHP_VERSION }}" >> $GITHUB_OUTPUT
          echo "image_name=${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
          echo "version=${{ env.VERSION }}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push IYUUPlus Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ steps.prepare.outputs.image_name }}
          file: ./${{ steps.prepare.outputs.image_name }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json

      - name: Update version file
        if: ${{ needs.check.outputs.version_changed == 'true' }}
        run: |
          new_version=${{ needs.check.outputs.version }}
          echo "$new_version" > ./${{ steps.prepare.outputs.image_name }}/.version
          git add ./${{ steps.prepare.outputs.image_name }}/.version
          git commit -m "Updated version to $new_version"
          git push origin master
