name: IYUUPlus Code Getter Docker Image CI

on:
  workflow_dispatch:
  schedule:
    - cron: "30 13 * * *"

env:
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: iyuuplus-code

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}
    steps:
      - name: Check if Alpine update available
        id: run
        uses: lucacome/docker-image-update-checker@v1.2.1
        with:
          base-image: library/alpine:latest
          image: ${{ secrets.DOCKER_USERNAME }}/iyuuplus-code:alpine
        continue-on-error: true
        if: github.event_name == 'schedule'
      - name: Check on result
        id: check
        run: |
          if [[ ${{ steps.run.outcome }} == 'success' ]]; then
            echo "needs-updating=${{ steps.run.outputs.needs-updating }}" >> $GITHUB_OUTPUT
          else
            echo "needs-updating=true" >> $GITHUB_OUTPUT
          fi
        if: github.event_name == 'schedule'

  build:
    needs: check
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'schedule' ||
      needs.check.outputs.needs-updating == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        id: prepare
        run: |
          TAGS="${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:alpine,${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push (IYUUPlus Code Getter) Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./iyuuplus
          file: ./iyuuplus/Dockerfile.code
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json
